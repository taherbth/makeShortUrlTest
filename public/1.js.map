{"version":3,"sources":["webpack:///./resources/js/components/manage/assets/js/tagsinput.js"],"names":["$","defaultOptions","tagClass","item","focusClass","itemValue","toString","itemText","this","itemTitle","freeInput","addOnBlur","maxTags","undefined","maxChars","confirmKeys","delimiter","delimiterRegex","cancelConfirmKeysOnEmpty","onTagExists","$tag","hide","fadeIn","trimValue","allowDuplicates","triggerChange","editOnBackspace","TagsInput","element","options","isInit","itemsArray","$element","addClass","isSelect","tagName","multiple","hasAttribute","objectItems","placeholderText","attr","name","type","inputSize","Math","max","length","$container","$input","appendTo","before","build","makeOptionItemFunction","key","propertyName","makeOptionFunction","value","prototype","constructor","add","dontPushVal","self","trim","match","remove","items","split","i","pushVal","existing","grep","maxInputLength","beforeItemAddEvent","Event","cancel","trigger","push","htmlEncode","data","findInputWrapper","optionExists","encodeURIComponent","replace","$option","append","typeahead","$existingTag","filter","other","beforeItemRemoveEvent","inArray","splice","removeClass","removeAll","pop","refresh","each","contents","nodeType","nodeValue","val","map","join","extend","source","query","process","processItems","texts","text","isFunction","success","then","when","updater","matcher","toLowerCase","indexOf","sorter","sort","highlighter","regex","RegExp","typeaheadjs","isArray","fn","apply","on","proxy","obj","datum","index","some","dataset","_index","valueKey","event","removeAttr","focus","focusin","focusout","target","$inputWrapper","which","doGetCaretPosition","prev","next","$prevTag","$nextTag","after","textLength","size","ceil","keyPressEvent","lookupList","found","maxLengthReached","keyCombination","alt","hasOwnProperty","altKey","shift","shiftKey","ctrl","ctrlKey","substr","preventDefault","closest","destroy","off","removeData","show","input","elt","container","parentNode","tagsinput","arg1","arg2","arg3","results","retVal","Constructor","htmlEncodeContainer","html","oField","iCaretPos","document","selection","oSel","createRange","moveStart","selectionStart","window","jQuery"],"mappings":"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","file":"1.js","sourcesContent":["/*\n * bootstrap-tagsinput v0.8.0\n * \n */\n\n(function ($) {\n  \"use strict\";\n\n  var defaultOptions = {\n    tagClass: function(item) {\n      return 'badge badge-info';\n    },\n    focusClass: 'focus',\n    itemValue: function(item) {\n      return item ? item.toString() : item;\n    },\n    itemText: function(item) {\n      return this.itemValue(item);\n    },\n    itemTitle: function(item) {\n      return null;\n    },\n    freeInput: true,\n    addOnBlur: true,\n    maxTags: undefined,\n    maxChars: undefined,\n    confirmKeys: [13, 44],\n    delimiter: ',',\n    delimiterRegex: null,\n    cancelConfirmKeysOnEmpty: false,\n    onTagExists: function(item, $tag) {\n      $tag.hide().fadeIn();\n    },\n    trimValue: false,\n    allowDuplicates: false,\n    triggerChange: true,\n    editOnBackspace: false\n  };\n\n  /**\n   * Constructor function\n   */\n  function TagsInput(element, options) {\n    this.isInit = true;\n    this.itemsArray = [];\n\n    this.$element = $(element);\n    this.$element.addClass('sr-only');\n\n    this.isSelect = (element.tagName === 'SELECT');\n    this.multiple = (this.isSelect && element.hasAttribute('multiple'));\n    this.objectItems = options && options.itemValue;\n    this.placeholderText = element.hasAttribute('placeholder') ? this.$element.attr('placeholder') : '';\n    this.name = element.hasAttribute('name') ? this.$element.attr('name') : '';\n    this.type = element.hasAttribute('type') ? this.$element.attr('type') : 'text';\n    this.inputSize = Math.max(1, this.placeholderText.length);\n\n    this.$container = $('<div class=\"bootstrap-tagsinput\"></div>');\n    this.$input = $('<input type=\"' + this.type + '\" name=\"' + this.name + '\" placeholder=\"' + this.placeholderText + '\"/>').appendTo(this.$container);\n\n    this.$element.before(this.$container);\n\n    this.build(options);\n    this.isInit = false;\n  }\n\n  TagsInput.prototype = {\n    constructor: TagsInput,\n\n    /**\n     * Adds the given item as a new tag. Pass true to dontPushVal to prevent\n     * updating the elements val()\n     */\n    add: function(item, dontPushVal, options) {\n      var self = this;\n\n      if (self.options.maxTags && self.itemsArray.length >= self.options.maxTags)\n        return;\n\n      // Ignore falsey values, except false\n      if (item !== false && !item)\n        return;\n\n      // Trim value\n      if (typeof item === \"string\" && self.options.trimValue) {\n        item = $.trim(item);\n      }\n\n      // Throw an error when trying to add an object while the itemValue option was not set\n      if (typeof item === \"object\" && !self.objectItems)\n        throw(\"Can't add objects when itemValue option is not set\");\n\n      // Ignore strings only containg whitespace\n      if (item.toString().match(/^\\s*$/))\n        return;\n\n      // If SELECT but not multiple, remove current tag\n      if (self.isSelect && !self.multiple && self.itemsArray.length > 0)\n        self.remove(self.itemsArray[0]);\n\n      if (typeof item === \"string\" && this.$element[0].tagName === 'INPUT') {\n        var delimiter = (self.options.delimiterRegex) ? self.options.delimiterRegex : self.options.delimiter;\n        var items = item.split(delimiter);\n        if (items.length > 1) {\n          for (var i = 0; i < items.length; i++) {\n            this.add(items[i], true);\n          }\n\n          if (!dontPushVal)\n            self.pushVal(self.options.triggerChange);\n          return;\n        }\n      }\n\n      var itemValue = self.options.itemValue(item),\n          itemText = self.options.itemText(item),\n          tagClass = self.options.tagClass(item),\n          itemTitle = self.options.itemTitle(item);\n\n      // Ignore items allready added\n      var existing = $.grep(self.itemsArray, function(item) { return self.options.itemValue(item) === itemValue; } )[0];\n      if (existing && !self.options.allowDuplicates) {\n        // Invoke onTagExists\n        if (self.options.onTagExists) {\n          var $existingTag = $(\".badge\", self.$container).filter(function() { return $(this).data(\"item\") === existing; });\n          self.options.onTagExists(item, $existingTag);\n        }\n        return;\n      }\n\n      // if length greater than limit\n      if (self.items().toString().length + item.length + 1 > self.options.maxInputLength)\n        return;\n\n      // raise beforeItemAdd arg\n      var beforeItemAddEvent = $.Event('beforeItemAdd', { item: item, cancel: false, options: options});\n      self.$element.trigger(beforeItemAddEvent);\n      if (beforeItemAddEvent.cancel)\n        return;\n\n      // register item in internal array and map\n      self.itemsArray.push(item);\n\n      // add a tag element\n\n      var $tag = $('<span class=\"' + htmlEncode(tagClass) + (itemTitle !== null ? ('\" title=\"' + itemTitle) : '') + '\">' + htmlEncode(itemText) + '<span data-role=\"remove\"></span></span>');\n      $tag.data('item', item);\n      self.findInputWrapper().before($tag);\n\n      // Check to see if the tag exists in its raw or uri-encoded form\n      var optionExists = (\n        $('option[value=\"' + encodeURIComponent(itemValue).replace(/\"/g, '\\\\\"') + '\"]', self.$element).length ||\n        $('option[value=\"' + htmlEncode(itemValue).replace(/\"/g, '\\\\\"') + '\"]', self.$element).length\n      );\n\n      // add <option /> if item represents a value not present in one of the <select />'s options\n      if (self.isSelect && !optionExists) {\n        var $option = $('<option selected>' + htmlEncode(itemText) + '</option>');\n        $option.data('item', item);\n        $option.attr('value', itemValue);\n        self.$element.append($option);\n      }\n\n      if (!dontPushVal)\n        self.pushVal(self.options.triggerChange);\n\n      // Add class when reached maxTags\n      if (self.options.maxTags === self.itemsArray.length || self.items().toString().length === self.options.maxInputLength)\n        self.$container.addClass('bootstrap-tagsinput-max');\n\n      // If using typeahead, once the tag has been added, clear the typeahead value so it does not stick around in the input.\n      if ($('.typeahead, .twitter-typeahead', self.$container).length) {\n        self.$input.typeahead('val', '');\n      }\n\n      if (this.isInit) {\n        self.$element.trigger($.Event('itemAddedOnInit', { item: item, options: options }));\n      } else {\n        self.$element.trigger($.Event('itemAdded', { item: item, options: options }));\n      }\n    },\n\n    /**\n     * Removes the given item. Pass true to dontPushVal to prevent updating the\n     * elements val()\n     */\n    remove: function(item, dontPushVal, options) {\n      var self = this;\n\n      if (self.objectItems) {\n        if (typeof item === \"object\")\n          item = $.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  self.options.itemValue(item); } );\n        else\n          item = $.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  item; } );\n\n        item = item[item.length-1];\n      }\n\n      if (item) {\n        var beforeItemRemoveEvent = $.Event('beforeItemRemove', { item: item, cancel: false, options: options });\n        self.$element.trigger(beforeItemRemoveEvent);\n        if (beforeItemRemoveEvent.cancel)\n          return;\n\n        $('.badge', self.$container).filter(function() { return $(this).data('item') === item; }).remove();\n        $('option', self.$element).filter(function() { return $(this).data('item') === item; }).remove();\n        if($.inArray(item, self.itemsArray) !== -1)\n          self.itemsArray.splice($.inArray(item, self.itemsArray), 1);\n      }\n\n      if (!dontPushVal)\n        self.pushVal(self.options.triggerChange);\n\n      // Remove class when reached maxTags\n      if (self.options.maxTags > self.itemsArray.length)\n        self.$container.removeClass('bootstrap-tagsinput-max');\n\n      self.$element.trigger($.Event('itemRemoved',  { item: item, options: options }));\n    },\n\n    /**\n     * Removes all items\n     */\n    removeAll: function() {\n      var self = this;\n\n      $('.badge', self.$container).remove();\n      $('option', self.$element).remove();\n\n      while(self.itemsArray.length > 0)\n        self.itemsArray.pop();\n\n      self.pushVal(self.options.triggerChange);\n    },\n\n    /**\n     * Refreshes the tags so they match the text/value of their corresponding\n     * item.\n     */\n    refresh: function() {\n      var self = this;\n      $('.badge', self.$container).each(function() {\n        var $tag = $(this),\n            item = $tag.data('item'),\n            itemValue = self.options.itemValue(item),\n            itemText = self.options.itemText(item),\n            tagClass = self.options.tagClass(item);\n\n          // Update tag's class and inner text\n          $tag.attr('class', null);\n          $tag.addClass('badge ' + htmlEncode(tagClass));\n          $tag.contents().filter(function() {\n            return this.nodeType == 3;\n          })[0].nodeValue = htmlEncode(itemText);\n\n          if (self.isSelect) {\n            var option = $('option', self.$element).filter(function() { return $(this).data('item') === item; });\n            option.attr('value', itemValue);\n          }\n      });\n    },\n\n    /**\n     * Returns the items added as tags\n     */\n    items: function() {\n      return this.itemsArray;\n    },\n\n    /**\n     * Assembly value by retrieving the value of each item, and set it on the\n     * element.\n     */\n    pushVal: function() {\n      var self = this,\n          val = $.map(self.items(), function(item) {\n            return self.options.itemValue(item).toString();\n          });\n\n      self.$element.val( val.join(self.options.delimiter) );\n\n      if (self.options.triggerChange)\n        self.$element.trigger('change');\n    },\n\n    /**\n     * Initializes the tags input behaviour on the element\n     */\n    build: function(options) {\n      var self = this;\n\n      self.options = $.extend({}, defaultOptions, options);\n      // When itemValue is set, freeInput should always be false\n      if (self.objectItems)\n        self.options.freeInput = false;\n\n      makeOptionItemFunction(self.options, 'itemValue');\n      makeOptionItemFunction(self.options, 'itemText');\n      makeOptionFunction(self.options, 'tagClass');\n\n      // Typeahead Bootstrap version 2.3.2\n      if (self.options.typeahead) {\n        var typeahead = self.options.typeahead || {};\n\n        makeOptionFunction(typeahead, 'source');\n\n        self.$input.typeahead($.extend({}, typeahead, {\n          source: function (query, process) {\n            function processItems(items) {\n              var texts = [];\n\n              for (var i = 0; i < items.length; i++) {\n                var text = self.options.itemText(items[i]);\n                map[text] = items[i];\n                texts.push(text);\n              }\n              process(texts);\n            }\n\n            this.map = {};\n            var map = this.map,\n                data = typeahead.source(query);\n\n            if ($.isFunction(data.success)) {\n              // support for Angular callbacks\n              data.success(processItems);\n            } else if ($.isFunction(data.then)) {\n              // support for Angular promises\n              data.then(processItems);\n            } else {\n              // support for functions and jquery promises\n              $.when(data)\n               .then(processItems);\n            }\n          },\n          updater: function (text) {\n            self.add(this.map[text]);\n            return this.map[text];\n          },\n          matcher: function (text) {\n            return (text.toLowerCase().indexOf(this.query.trim().toLowerCase()) !== -1);\n          },\n          sorter: function (texts) {\n            return texts.sort();\n          },\n          highlighter: function (text) {\n            var regex = new RegExp( '(' + this.query + ')', 'gi' );\n            return text.replace( regex, \"<strong>$1</strong>\" );\n          }\n        }));\n      }\n\n      // typeahead.js\n      if (self.options.typeaheadjs) {\n        // Determine if main configurations were passed or simply a dataset\n        var typeaheadjs = self.options.typeaheadjs;\n        if (!$.isArray(typeaheadjs)) {\n            typeaheadjs = [null, typeaheadjs];\n        }\n\n        $.fn.typeahead.apply(self.$input, typeaheadjs).on('typeahead:selected', $.proxy(function (obj, datum, name) {\n          var index = 0;\n          typeaheadjs.some(function(dataset, _index) {\n            if (dataset.name === name) {\n              index = _index;\n              return true;\n            }\n            return false;\n          });\n\n          // @TODO Dep: https://github.com/corejavascript/typeahead.js/issues/89\n          if (typeaheadjs[index].valueKey) {\n            self.add(datum[typeaheadjs[index].valueKey]);\n          } else {\n            self.add(datum);\n          }\n\n          self.$input.typeahead('val', '');\n        }, self));\n      }\n\n      self.$container.on('click', $.proxy(function(event) {\n        if (! self.$element.attr('disabled')) {\n          self.$input.removeAttr('disabled');\n        }\n        self.$input.focus();\n      }, self));\n\n        if (self.options.addOnBlur && self.options.freeInput) {\n          self.$input.on('focusout', $.proxy(function(event) {\n              // HACK: only process on focusout when no typeahead opened, to\n              //       avoid adding the typeahead text as tag\n              if ($('.typeahead, .twitter-typeahead', self.$container).length === 0) {\n                self.add(self.$input.val());\n                self.$input.val('');\n              }\n          }, self));\n        }\n\n      // Toggle the 'focus' css class on the container when it has focus\n      self.$container.on({\n        focusin: function() {\n          self.$container.addClass(self.options.focusClass);\n        },\n        focusout: function() {\n          self.$container.removeClass(self.options.focusClass);\n        },\n      });\n\n      self.$container.on('keydown', 'input', $.proxy(function(event) {\n        var $input = $(event.target),\n            $inputWrapper = self.findInputWrapper();\n\n        if (self.$element.attr('disabled')) {\n          self.$input.attr('disabled', 'disabled');\n          return;\n        }\n\n        switch (event.which) {\n          // BACKSPACE\n          case 8:\n            if (doGetCaretPosition($input[0]) === 0) {\n              var prev = $inputWrapper.prev();\n              if (prev.length) {\n                if (self.options.editOnBackspace === true) {\n                  $input.val(prev.data('item'));\n                }\n                self.remove(prev.data('item'));\n              }\n            }\n            break;\n\n          // DELETE\n          case 46:\n            if (doGetCaretPosition($input[0]) === 0) {\n              var next = $inputWrapper.next();\n              if (next.length) {\n                self.remove(next.data('item'));\n              }\n            }\n            break;\n\n          // LEFT ARROW\n          case 37:\n            // Try to move the input before the previous tag\n            var $prevTag = $inputWrapper.prev();\n            if ($input.val().length === 0 && $prevTag[0]) {\n              $prevTag.before($inputWrapper);\n              $input.focus();\n            }\n            break;\n          // RIGHT ARROW\n          case 39:\n            // Try to move the input after the next tag\n            var $nextTag = $inputWrapper.next();\n            if ($input.val().length === 0 && $nextTag[0]) {\n              $nextTag.after($inputWrapper);\n              $input.focus();\n            }\n            break;\n         default:\n             // ignore\n         }\n\n        // Reset internal input's size\n        var textLength = $input.val().length,\n            wordSpace = Math.ceil(textLength / 5),\n            size = textLength + wordSpace + 1;\n        $input.attr('size', Math.max(this.inputSize, size));\n      }, self));\n\n      self.$container.on('keypress', 'input', $.proxy(function(event) {\n         var $input = $(event.target);\n\n         if (self.$element.attr('disabled')) {\n            self.$input.attr('disabled', 'disabled');\n            return;\n         }\n\n         var text = $input.val(),\n         maxLengthReached = self.options.maxChars && text.length >= self.options.maxChars;\n         if (self.options.freeInput && (keyCombinationInList(event, self.options.confirmKeys) || maxLengthReached)) {\n            // Only attempt to add a tag if there is data in the field\n            if (text.length !== 0) {\n               self.add(maxLengthReached ? text.substr(0, self.options.maxChars) : text);\n               $input.val('');\n            }\n\n            // If the field is empty, let the event triggered fire as usual\n            if (self.options.cancelConfirmKeysOnEmpty === false) {\n                event.preventDefault();\n            }\n         }\n\n         // Reset internal input's size\n         var textLength = $input.val().length,\n            wordSpace = Math.ceil(textLength / 5),\n            size = textLength + wordSpace + 1;\n         $input.attr('size', Math.max(this.inputSize, size));\n      }, self));\n\n      // Remove icon clicked\n      self.$container.on('click', '[data-role=remove]', $.proxy(function(event) {\n        if (self.$element.attr('disabled')) {\n          return;\n        }\n        self.remove($(event.target).closest('.badge').data('item'));\n      }, self));\n\n      // Only add existing value as tags when using strings as tags\n      if (self.options.itemValue === defaultOptions.itemValue) {\n        if (self.$element[0].tagName === 'INPUT') {\n            self.add(self.$element.val());\n        } else {\n          $('option', self.$element).each(function() {\n            self.add($(this).attr('value'), true);\n          });\n        }\n      }\n    },\n\n    /**\n     * Removes all tagsinput behaviour and unregsiter all event handlers\n     */\n    destroy: function() {\n      var self = this;\n\n      // Unbind events\n      self.$container.off('keypress', 'input');\n      self.$container.off('click', '[role=remove]');\n\n      self.$container.remove();\n      self.$element.removeData('tagsinput');\n      self.$element.show();\n    },\n\n    /**\n     * Sets focus on the tagsinput\n     */\n    focus: function() {\n      this.$input.focus();\n    },\n\n    /**\n     * Returns the internal input element\n     */\n    input: function() {\n      return this.$input;\n    },\n\n    /**\n     * Returns the element which is wrapped around the internal input. This\n     * is normally the $container, but typeahead.js moves the $input element.\n     */\n    findInputWrapper: function() {\n      var elt = this.$input[0],\n          container = this.$container[0];\n      while(elt && elt.parentNode !== container)\n        elt = elt.parentNode;\n\n      return $(elt);\n    }\n  };\n\n  /**\n   * Register JQuery plugin\n   */\n  $.fn.tagsinput = function(arg1, arg2, arg3) {\n    var results = [];\n\n    this.each(function() {\n      var tagsinput = $(this).data('tagsinput');\n      // Initialize a new tags input\n      if (!tagsinput) {\n          tagsinput = new TagsInput(this, arg1);\n          $(this).data('tagsinput', tagsinput);\n          results.push(tagsinput);\n\n          if (this.tagName === 'SELECT') {\n              $('option', $(this)).attr('selected', 'selected');\n          }\n\n          // Init tags from $(this).val()\n          $(this).val($(this).val());\n      } else if (!arg1 && !arg2) {\n          // tagsinput already exists\n          // no function, trying to init\n          results.push(tagsinput);\n      } else if(tagsinput[arg1] !== undefined) {\n          // Invoke function on existing tags input\n            if(tagsinput[arg1].length === 3 && arg3 !== undefined){\n               var retVal = tagsinput[arg1](arg2, null, arg3);\n            }else{\n               var retVal = tagsinput[arg1](arg2);\n            }\n          if (retVal !== undefined)\n              results.push(retVal);\n      }\n    });\n\n    if ( typeof arg1 == 'string') {\n      // Return the results from the invoked function calls\n      return results.length > 1 ? results : results[0];\n    } else {\n      return results;\n    }\n  };\n\n  $.fn.tagsinput.Constructor = TagsInput;\n\n  /**\n   * Most options support both a string or number as well as a function as\n   * option value. This function makes sure that the option with the given\n   * key in the given options is wrapped in a function\n   */\n  function makeOptionItemFunction(options, key) {\n    if (typeof options[key] !== 'function') {\n      var propertyName = options[key];\n      options[key] = function(item) { return item[propertyName]; };\n    }\n  }\n  function makeOptionFunction(options, key) {\n    if (typeof options[key] !== 'function') {\n      var value = options[key];\n      options[key] = function() { return value; };\n    }\n  }\n  /**\n   * HtmlEncodes the given value\n   */\n  var htmlEncodeContainer = $('<div />');\n  function htmlEncode(value) {\n    if (value) {\n      return htmlEncodeContainer.text(value).html();\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Returns the position of the caret in the given input field\n   * http://flightschool.acylt.com/devnotes/caret-position-woes/\n   */\n  function doGetCaretPosition(oField) {\n    var iCaretPos = 0;\n    if (document.selection) {\n      oField.focus ();\n      var oSel = document.selection.createRange();\n      oSel.moveStart ('character', -oField.value.length);\n      iCaretPos = oSel.text.length;\n    } else if (oField.selectionStart || oField.selectionStart == '0') {\n      iCaretPos = oField.selectionStart;\n    }\n    return (iCaretPos);\n  }\n\n  /**\n    * Returns boolean indicates whether user has pressed an expected key combination.\n    * @param object keyPressEvent: JavaScript event object, refer\n    *     http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n    * @param object lookupList: expected key combinations, as in:\n    *     [13, {which: 188, shiftKey: true}]\n    */\n  function keyCombinationInList(keyPressEvent, lookupList) {\n      var found = false;\n      $.each(lookupList, function (index, keyCombination) {\n          if (typeof (keyCombination) === 'number' && keyPressEvent.which === keyCombination) {\n              found = true;\n              return false;\n          }\n\n          if (keyPressEvent.which === keyCombination.which) {\n              var alt = !keyCombination.hasOwnProperty('altKey') || keyPressEvent.altKey === keyCombination.altKey,\n                  shift = !keyCombination.hasOwnProperty('shiftKey') || keyPressEvent.shiftKey === keyCombination.shiftKey,\n                  ctrl = !keyCombination.hasOwnProperty('ctrlKey') || keyPressEvent.ctrlKey === keyCombination.ctrlKey;\n              if (alt && shift && ctrl) {\n                  found = true;\n                  return false;\n              }\n          }\n      });\n\n      return found;\n  }\n\n  /**\n   * Initialize tagsinput behaviour on inputs and selects which have\n   * data-role=tagsinput\n   */\n  $(function() {\n    $(\"input[data-role=tagsinput], select[multiple][data-role=tagsinput]\").tagsinput();\n  });\n})(window.jQuery);\n"],"sourceRoot":""}